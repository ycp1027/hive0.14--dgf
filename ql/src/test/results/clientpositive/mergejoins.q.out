PREHOOK: query: create table a (val1 int, val2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@a
POSTHOOK: query: create table a (val1 int, val2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@a
PREHOOK: query: create table b (val1 int, val2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@b
POSTHOOK: query: create table b (val1 int, val2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@b
PREHOOK: query: create table c (val1 int, val2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@c
POSTHOOK: query: create table c (val1 int, val2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@c
PREHOOK: query: create table d (val1 int, val2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@d
POSTHOOK: query: create table d (val1 int, val2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@d
PREHOOK: query: create table e (val1 int, val2 int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@e
POSTHOOK: query: create table e (val1 int, val2 int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@e
PREHOOK: query: explain select * from a join b on a.val1=b.val1 join c on a.val1=c.val1 join d on a.val1=d.val1 join e on a.val2=e.val2
PREHOOK: type: QUERY
POSTHOOK: query: explain select * from a join b on a.val1=b.val1 join c on a.val1=c.val1 join d on a.val1=d.val1 join e on a.val2=e.val2
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: d
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: val1 is not null (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: val1 (type: int)
                sort order: +
                Map-reduce partition columns: val1 (type: int)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                value expressions: val2 (type: int)
          TableScan
            alias: b
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: val1 is not null (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: val1 (type: int)
                sort order: +
                Map-reduce partition columns: val1 (type: int)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                value expressions: val2 (type: int)
          TableScan
            alias: c
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: val1 is not null (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: val1 (type: int)
                sort order: +
                Map-reduce partition columns: val1 (type: int)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                value expressions: val2 (type: int)
          TableScan
            alias: a
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: (val1 is not null and val2 is not null) (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: val1 (type: int)
                sort order: +
                Map-reduce partition columns: val1 (type: int)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                value expressions: val2 (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Inner Join 0 to 2
               Inner Join 0 to 3
          condition expressions:
            0 {KEY.reducesinkkey0} {VALUE._col0}
            1 {KEY.reducesinkkey0} {VALUE._col0}
            2 {KEY.reducesinkkey0} {VALUE._col0}
            3 {KEY.reducesinkkey0} {VALUE._col0}
          outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11, _col15, _col16
          Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
          File Output Operator
            compressed: false
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: int)
              sort order: +
              Map-reduce partition columns: _col1 (type: int)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              value expressions: _col0 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int), _col15 (type: int), _col16 (type: int)
          TableScan
            alias: e
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            Filter Operator
              predicate: val2 is not null (type: boolean)
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              Reduce Output Operator
                key expressions: val2 (type: int)
                sort order: +
                Map-reduce partition columns: val2 (type: int)
                Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
                value expressions: val1 (type: int)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col0} {KEY.reducesinkkey0} {VALUE._col4} {VALUE._col5} {VALUE._col9} {VALUE._col10} {VALUE._col14} {VALUE._col15}
            1 {VALUE._col0} {KEY.reducesinkkey0}
          outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11, _col15, _col16, _col20, _col21
          Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
          Select Operator
            expressions: _col0 (type: int), _col1 (type: int), _col5 (type: int), _col6 (type: int), _col10 (type: int), _col11 (type: int), _col15 (type: int), _col16 (type: int), _col20 (type: int), _col21 (type: int)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9
            Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

PREHOOK: query: --HIVE-3070 filter on outer join condition removed while merging join tree
explain select * from src a join src b on a.key=b.key left outer join src c on b.key=c.key and b.key<10
PREHOOK: type: QUERY
POSTHOOK: query: --HIVE-3070 filter on outer join condition removed while merging join tree
explain select * from src a join src b on a.key=b.key left outer join src c on b.key=c.key and b.key<10
POSTHOOK: type: QUERY
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              value expressions: value (type: string)
          TableScan
            alias: c
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              value expressions: value (type: string)
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Reduce Output Operator
              key expressions: key (type: string)
              sort order: +
              Map-reduce partition columns: key (type: string)
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              value expressions: value (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
               Left Outer Join1 to 2
          condition expressions:
            0 {KEY.reducesinkkey0} {VALUE._col0}
            1 {KEY.reducesinkkey0} {VALUE._col0}
            2 {KEY.reducesinkkey0} {VALUE._col0}
          filter predicates:
            0 
            1 {(KEY.reducesinkkey0 < 10)}
            2 
          outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11
          Statistics: Num rows: 1100 Data size: 11686 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col10 (type: string), _col11 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
            Statistics: Num rows: 1100 Data size: 11686 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 1100 Data size: 11686 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink

